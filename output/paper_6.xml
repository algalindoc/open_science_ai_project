<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Platform Autobidding with and without Predictions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2025-02-26">26 Feb 2025</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Gagan</forename><surname>Aggarwal</surname></persName>
							<email>gagana@google.com</email>
						</author>
						<author>
							<persName><forename type="first">Anupam</forename><surname>Gupta</surname></persName>
							<email>anupam.g@nyu.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">New York University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Xizhi</forename><surname>Tan</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Drexel University</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Mingfei</forename><surname>Zhao</surname></persName>
							<email>mingfei@google.com</email>
						</author>
						<title level="a" type="main">Multi-Platform Autobidding with and without Predictions</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2025-02-26">26 Feb 2025</date>
						</imprint>
					</monogr>
					<idno type="MD5">F8849E41518A7BE6CD58F064D2A716A0</idno>
					<idno type="arXiv">arXiv:2502.19317v1[cs.GT]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2025-03-04T16:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We study the problem of finding the optimal bidding strategy for an advertiser in a multiplatform auction setting. The competition on a platform is captured by a value and a cost function, mapping bidding strategies to value and cost respectively. We assume a diminishing returns property, whereby the marginal cost is increasing in value. The advertiser uses an autobidder that selects a bidding strategy for each platform, aiming to maximize total value subject to budget and return-on-spend constraint. The advertiser has no prior information and learns about the value and cost functions by querying a platform with a specific bidding strategy. Our goal is to design algorithms that find the optimal bidding strategy with a small number of queries.</p><p>We first present an algorithm that requires O(m log(mn) log n) queries, where m is the number of platforms and n is the number of possible bidding strategies in each platform. Moreover, we adopt the learning-augmented framework and propose an algorithm that utilizes a (possibly erroneous) prediction of the optimal bidding strategy. We provide a O(m log(mη) log η) query-complexity bound on our algorithm as a function of the prediction error η. This guarantee gracefully degrades to O(m log(mn) log n). This achieves a "best-of-both-worlds" scenario: O(m) queries when given a correct prediction, and O(m log(mn) log n) even for an arbitrary incorrect prediction.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Online advertisers often advertise across multiple platforms, such as Amazon, Bing, Google, Meta and TikTok, and face the challenging task of optimizing their bids across these platforms. The complexity comes not just from having to select a vector of bidding strategies (one for each platform), but also from the diversity of auctions used across platforms and the black-box nature of the detailed auction rules and the level of competition.</p><p>To deal with the complexity, advertisers are increasingly using automated bidding agents (aka autobidding) to bid on their behalf. An autobidder allows an advertiser to specify constraints like Budget and Return-on-Spend (ROS), and bids on their behalf to maximize value subject to the constraints. This has led to a lot of research interest in problems related to autobidding (see Aggarwal et al. <ref type="bibr" target="#b2">[3]</ref> for a recent survey). In particular, the problem of designing bidding algorithms for the single platform setting is well-studied <ref type="bibr" target="#b0">[1]</ref>, including in the online learning setting (see Section 3 of the survey <ref type="bibr" target="#b2">[3]</ref>). However, there is not much work on the problem of bidding optimally across multiple platforms (see the related work section for what is known).</p><p>In this paper, we study the problem of finding the optimal bidding strategy in the multi-platform setting. In particular, an advertiser aims to maximize her total value subject to a global budget and return-on-spend (ROS) constraint across all platforms. To capture the black-box nature of auction mechanisms and level of competition, we assume that the advertiser has no prior knowledge about the mapping from bids to auction outcomes for any platform. Instead, the advertiser interacts with a platform's auction by submitting a bid to the platform and observing the corresponding cost and value (i.e., the user has "query access" to the mapping). We propose algorithms that find the optimal bidding strategy in this setting, and prove worse-case query complexity bounds for them.</p><p>While worst-case results offer robustness and broad applicability, the guarantees they provide can sometimes be overly pessimistic. To address this, a new framework called "algorithms with predictions" has recently been introduced. This framework allows algorithms to incorporate potentially flawed machine-learned predictions as a guiding tool. The objective is twofold: to achieve improved performance guarantees when the prediction is accurate (a property known as consistency) and to maintain good worst-case bounds even when the prediction is completely incorrect (a property called robustness). This framework provides a natural way to integrate machine-learned predictions into the design of algorithms while preserving the essential robustness offered by worstcase analysis. In this work, we adopt the learning-augmented framework and explore the role of predictions in bidding strategy optimization. Specifically, we examine the scenario where the algorithm has access to a prediction μ µ µ of the optimal bidding strategy, without any assumption regarding the prediction's accuracy. We propose algorithms that leverage the untrusted prediction to achieve improved query complexity bounds, which degrade gracefully based on the quality of the prediction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Our Results</head><p>We model the problem of searching for the optimal bidding strategy as follows: there are m platforms. For each platform j, we are given a cost function c j and a value function v j , and n different bidding strategies indexed 1 through n such that c j (µ j ) and v j (µ j ) are respectively the cost incurred by bidding µ j on platform j, and the value accrued from this bidding strategy. Our goal is to find a collection µ µ µ = (µ 1 , . . . , µ m ) s.t. (a) the ratio of the total value accrued to the total cost is at least some target threshold, (b) the total cost is less than the budget, and (c) the total value is maximized.</p><p>We propose a search algorithm, MedianOfMedians, that determines the exact optimal bid-ding strategy using O(m log(mn) log n) queries. Our algorithm builds on a characterization of the optimal bidding strategy in the multi-platform setting first developed in <ref type="bibr" target="#b3">[4]</ref> under continuous strategy space. Intuitively, the optimal strategy is to keep increasing bid on the platform that currently offers the highest marginal bang-per-buck (corresponding to the lowest marginal cost-per-unitvalue) until either the budget or the ROS constraint is about to be violated. In other words, the optimal strategy aims to equalize the marginal cost-per-unit-value across all the platforms. At a high level, the algorithm searches in the space of marginal costs. Initially, there are up to mn candidate marginal costs. The algorithm carefully selects a candidate marginal cost and finds the corresponding vector of bidding strategies, as defined in Lemma 1, via Subroutine 2. Based on the outcomes (i.e. cost and value on each platform) of the corresponding strategy vector, the algorithm removes a constant fraction of candidate marginals from consideration, and recurses on the residual problem.</p><p>We complement this algorithmic result with an Ω(m log n) lower bound and an Ω(log mn) lower bound for this problem. The Ω(log mn) lower bound reflects the difficulty of identifying the optimal marginal cost among the mn possible candidates, while the Ω(m log n) bound captures the complexity of determining the corresponding bidding strategy for that optimal marginal cost. Notably, these are the two key components of our algorithm, and our upper bound is the product of these two lower bounds.</p><p>Next, we adopt the learning-augmented framework to improve the worst-case query complexity bound. We propose an algorithm with access to a prediction μ µ µ of the optimal strategy µ µ µ o . The algorithm, BranchOutMedianOfMedians, starts with trying to the find the optimal solution in a small range around the predictions, and expands the search range if the search is unsuccessful. With the right sequence of expanding ranges, we show that the algorithm finds the optimal strategy µ µ µ * with O(m log(mη) log η) queries, where η = max j |µ µ µ * j − μ µ µ j | represents the prediction error. This means that the algorithm requires only O(m) queries when the predictions are accurate; this is the minimum number of queries needed to implement any bidding strategy. Moreover, since η ≤ n, the total number of queries never exceeds that of the MedianOfMedians algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Related Work</head><p>Multi-platform mechanism design and autobidding. Previous research has examined the multi-platform auction environment from both the auctioneer's and the bidders' perspectives. Regarding auction design, Aggarwal et al. <ref type="bibr" target="#b1">[2]</ref> analyzes a scenario where a single platform manages multiple channels, each selling queries via a second-price auction (SPA) with a reserve price. The authors assess the costs associated with each channel optimizing its own reserve price compared to a unified platform policy. Inspired by the Display Ad market, Paes Leme et al. <ref type="bibr" target="#b32">[32]</ref> explores a model in which multiple platforms vie for profit-maximizing bidders who must use the same bid across all platforms (which we refer to as a uniform bid). Their key finding indicates that the first-price auction (FPA) serves as the optimal auction format for these platforms. On the bidders' side, Susan et al. <ref type="bibr" target="#b34">[34]</ref> investigates bidding strategies for utility-maximizing advertisers operating across multiple platforms while adhering to budget constraints. Meanwhile, Deng et al. <ref type="bibr" target="#b19">[20]</ref> focuses on value-maximizing advertisers and reveals that optimizing ROS per platform can yield arbitrarily poor results when both ROS and budget constraints are in play.</p><p>Aggarwal et al. <ref type="bibr" target="#b3">[4]</ref> study a similar multi-platform setting with autobidders under ROI constraints but focus on the auction design problem from the platform's perspective. While first-price auctions are optimal in the absence of competition (Deng et al. <ref type="bibr" target="#b18">[19]</ref>), they show that from the perspective of each separate platform, running a second-price auction can achieve larger revenue than first-price auction when there are two competing platforms. They also identify key factors influencing the platform's choice of auction formats, including advertiser sensitivity to auction changes, competition and relative inefficiency of second-price auctions. In our paper, we focus on how advertisers can bid optimally in the multi-platform setting.</p><p>Algorithms with predictions. In recent years, the learning-augmented framework has emerged as a prominent paradigm for the design and analysis of algorithms. For an overview of early contributions, we refer to <ref type="bibr" target="#b31">[31]</ref>, while <ref type="bibr" target="#b26">[27]</ref> offers an up-to-date compilation of relevant papers in this area. This framework seeks to address the shortcomings of overly pessimistic worst-case analyses. In the last five years alone, hundreds of papers have explored traditional algorithmic challenges through this lens, with notable examples including online paging <ref type="bibr" target="#b28">[29]</ref>, scheduling <ref type="bibr" target="#b33">[33]</ref>, optimization problems related to covering <ref type="bibr" target="#b11">[12]</ref> and knapsack constraints <ref type="bibr" target="#b23">[24]</ref>, as well as topics like Nash social welfare maximization <ref type="bibr" target="#b12">[13]</ref>, the secretary problem <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b21">22]</ref>, and various graph-related problems <ref type="bibr" target="#b6">[7]</ref>.</p><p>More closely related to our work, the research on learning-augmented mechanisms interacting with strategic agents is recently initiated by Agrawal et al. <ref type="bibr" target="#b4">[5]</ref> and Xu and Lu <ref type="bibr" target="#b35">[35]</ref>. This area includes strategic facility location <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b13">14]</ref>, strategic scheduling <ref type="bibr" target="#b35">[35,</ref><ref type="bibr" target="#b9">10]</ref>, auctions <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b10">11]</ref>, bicriteria mechanism design (which seeks to optimize both social welfare and revenue) <ref type="bibr" target="#b7">[8]</ref>, graph problems with private input <ref type="bibr" target="#b17">[18]</ref>, metric distortion <ref type="bibr" target="#b14">[15]</ref>, and equilibrium analysis <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b25">26]</ref>. Recently, Christodoulou et al. <ref type="bibr" target="#b16">[17]</ref> revisited mechanism design challenges by focusing on predictions about the outcome space rather than the input. While most of these studies concentrate on the mechanism design problem, our research emphasizes how predictions can assist agents in identifying optimal strategies. For more information on this body of work, we recommend <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>We consider the problem of finding the optimal bidding strategy in a multi-platform auction setting for a value-maximizer with budget and return on spend (ROS) constraints. There is a set M consisting of m platforms in the market. We assume that for each platform, the advertiser can pick from n different bids (note that this set can be different for different platforms), indexed by 0, 1, 2, . . . , n, where bid 0 is used to denote non-participation. Each platform j ∈ M is described by a value and a cost function that map bid indices to a corresponding value and cost, respectively, i.e., v j : {0, 1, . . . , n} → R ≥0 and c j : {0, 1, . . . , n} → R ≥0 . In other words, when a bidder chooses to bid according to bid µ ∈ {0, 1, . . . , n}, they incur a cost of c j (µ) and receive a value of v j (µ). We assume that there is a strict ordering of costs and values by bid index, i.e. v j (µ) &lt; v j (µ + 1) and c j (µ) &lt; c j (µ + 1) for all µ ∈ {0, 1, . . . , n}. We refer to the mapping from bid to the cost and value of each platform as the landscape of that platform. In addition, we define the marginal cost of bidding µ ≥ 1 on platform j as</p><formula xml:id="formula_0">MC j (µ) = c j (µ) − c j (µ − 1) v j (µ) − v j (µ − 1) , (<label>Marginal Cost)</label></formula><p>where c(0) = 0 and v(0) = 0. We make standard convexity assumption that MC j is non-decreasing for every platform j. Given the integral strategy set, we expand the bidding space by also considering the fractional solution between each integral bid, hence making the strategy space continuous. We use S and S c to denote the integral and fractional strategy space, respectively. The cost, value and marginal functions of the continuous bidding space [0, n] m extend the discrete function by linear interpolation. <ref type="foot" target="#foot_0">1</ref>Formally</p><formula xml:id="formula_1">v j (µ) = (⌈µ⌉ − µ) • v j (⌊µ⌋) + (µ − ⌊µ⌋) • v j (⌈µ⌉), c j (µ) = (⌈µ⌉ − µ) • c j (⌊µ⌋) + (µ − ⌊µ⌋) • c j (⌈µ⌉),</formula><p>Consequently, we have that MC j (µ) = MC j (⌈µ⌉).</p><p>We note that the problem of finding the optimal integral solution is NP-hard. <ref type="foot" target="#foot_1">2</ref> The objective of the bidder is therefore to find an optimal fractional bidding strategy µ µ µ = (µ 1 , µ 2 , . . . , µ m ) where µ j ∈ [0, n] such that she maximizes the total value received by executing bidding strategy µ j on each platform j, subject to a budget constraint and the ROS constraint across all platforms. Let B and T be the budget and target ROS of the bidder. We can formulate the problem as the following program:</p><formula xml:id="formula_2">max µ µ µ=(µ 1 ,µ 2 ...,µm) j∈M v j (µ j ) s.t. j∈M c j (µ j ) ≤ T • j∈M v j (µ j ),<label>(1)</label></formula><formula xml:id="formula_3">j∈M c j (µ j ) ≤ B.</formula><p>throughout the paper, we denote µ µ µ o the optimal (fractional) bidding strategy, and µ µ µ * the floor of it, i.e., µ * j = ⌊µ o j ⌋ for all platform j. Note that µ * j ∈ S. We assume that the bidder only knows the set of possible bidding strategies, but has no information about the platforms' value and cost functions. Instead, the bidder can interact with platforms via bidding queries: the bidder plays strategy µ on a platform j to learn the value v j (µ), the cost c j (µ), and the marginal cost MC j (µ) <ref type="foot" target="#foot_2">3</ref> . Each such query is costly to the bidder, and the goal is to minimize the number of queries required to determine the optimal strategy.</p><p>Given an instance I and an algorithm ALG, let ALG(I) denote the number of queries needed to find the optimal strategy for that instance. Then the query complexity of the algorithm is defined as: max</p><formula xml:id="formula_4">I ALG(I)</formula><p>The learning-augmented framework In this work, we adopt the learning-augmented framework and study how we can further reduce the query complexity by considering search algorithms that are equipped with a (potentially erroneous) prediction μ</p><formula xml:id="formula_5">µ µ ∈ [0, n] m of the optimal fractional bid- ding strategy µ µ µ o (I) = (µ o 1 , µ o 2 , . . . , µ o n ).</formula><p>The error of an predictions η is defined to be the maximum point-wise deviation from µ µ µ o , formally:</p><formula xml:id="formula_6">η(μ µ µ, I) = max j |μ j − µ o j (I)|</formula><p>We let the algorithm ALG use both the instance I and the prediction μ µ µ as input. We evaluate the performance of such an algorithm using its robustness, consistency and the query complexity as a function of the prediction error.</p><p>The robustness of an algorithm refers to the worst-case query complexity of the algorithm given an adversarially chosen, possibly erroneous, prediction. Mathematically,</p><formula xml:id="formula_7">robustness(ALG) = max μ µ µ,I ALG(μ µ µ, I)</formula><p>The consistency of an algorithm refers to the worst-case query complexity when the prediction that it is provided with is accurate, i.e., μ µ µ = µ µ µ * (I). Mathematically,</p><formula xml:id="formula_8">consistency(ALG) = max μ µ µ,I:μ µ µ=µ µ µ * (I)</formula><p>ALG(μ µ µ, I).</p><p>Lastly, the query complexity of an algorithm given a prediction with error η ′ is defined to be:</p><formula xml:id="formula_9">max μ µ µ,I:η(μ µ µ,I)≤η ′ ALG(μ µ µ, I).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Characterization of Bidder's Optimal Bidding Strategy</head><p>In this section, we present a characterization of the optimal bidding strategy µ µ µ o that will be useful in designing the algorithm. To this end, we first prove a useful lemma about the "ranking" of integral strategies in S. We then argue how an "almost-optimal" integral solution can be used to determine the optimal fractional solution.</p><p>Lemma 1. Given some positive number k, and the n discrete indices on each platform, define</p><formula xml:id="formula_10">µ µ µ k = (µ k 1 , µ k 2 , . . . µ k m ) where µ k j = arg max µ∈{0,1,...,n} {MC j (µ) ≤ k},</formula><p>then there exist a k * such that for any k ≤ k * , µ µ µ k is a feasible solution for program <ref type="bibr" target="#b0">(1)</ref> and for any</p><formula xml:id="formula_11">k ′ &gt; k * , µ µ µ k ′ is not feasible.</formula><p>We first show the following helper lemma. Intuitively, if we consider the landscape of each platform, and connect each bidding strategy with a straight line, the landscape would be convex, the lemma below is simply a property of a convex function.</p><p>Lemma 2. For any platform j ∈ M ,</p><formula xml:id="formula_12">c j (µ) v j (µ) ≤ MC j (µ).</formula><p>Proof. For presentation purpose, we drop the subscript j in this prove as it should hold for any platform. We define c(0)/v(0) = 0 We prove the statement via induction. First consider the base case for µ = 1, we have c(1)/v(1) ≥ 0 = c(0)/v(0) since both the cost and the value functions weakly increase w.r.t µ, we also have c(1</p><formula xml:id="formula_13">)/v(1) = c(1)−c(0) v(1)−v(0) = MC(1) by definition. The base case is therefore established. Let c(µ) v(µ) = X µ . Assume, for induction, that X µ ′ ≤ MC(µ ′ ) for any µ ′ &lt; µ. We first show X µ−1 ≤ X µ holds for µ ≥ 2. Consider c(µ) = X µ • v(µ) c(µ) − c(µ − 1) = X µ • v(µ) − c(µ − 1) MC(µ) • (v(µ) − v(µ − 1)) = X µ • v(µ) − c(µ − 1) MC(µ − 1) • (v(µ) − v(µ − 1)) = X µ • v(µ) − c(µ − 1) X µ−1 • (v(µ) − v(µ − 1)) ≤ X µ • v(µ) − c(µ − 1) X µ−1 • (v(µ) − v(µ − 1)) ≤ X µ • v(µ) − X µ−1 • v(µ − 1) X µ−1 • v(µ) ≤ X µ • v(µ) X µ−1 ≤ X µ ,</formula><p>where the third equality is by definition of MC, the forth equality is by monotoncity of MC, and the first inequality is by induction hypothesis MC(µ − 1) ≥ X µ−1 . In addition, consider the same set of equation again:</p><formula xml:id="formula_14">c(µ) = X µ • v(µ) c(µ) − c(µ − 1) = X µ • v(µ) − c(µ − 1) c(µ) − c(µ − 1) = X µ • v(µ) − X µ−1 • v(µ − 1) c(µ) − c(µ − 1) ≥ X µ • v(µ) − X µ • v(µ − 1) MC(µ) • (v(µ) − v(µ − 1)) ≥ X µ • (v(µ) − v(µ − 1)) MC(µ) ≥ X µ</formula><p>where as the first inequality is due to X µ−1 ≤ X µ , we therefore have MC(µ) ≥ X µ , hence proved.</p><p>Proof of Lemma 1. let k be the smallest k with infeasible µ µ µ k , if the infeasibility is due to the budget constraint, then for any k ′ ≥ k we trivially have that µ µ µ k ′ violates the budget constraint as well since µ k ′ j ≥ µ k j and the cost functions are monotone. If the infeasibility is due to the ROS constraint, i.e.,</p><formula xml:id="formula_15">j∈M c j (µ k j ) &gt; T • j∈M v j (µ k j ),<label>(2)</label></formula><p>proving the statement is equivalent to proving for any k ′ ≥ k, µ µ µ k ′ is also infeasible. To this end, we first show that the maximum marginals among the µ k j is strictly more than T , assume for contradiction, that MC j (µ k j ) ≤ T for all j, by lemma 2 we would have the c j (µ k j )/v j (µ k j ) ≤ MC j (µ k j ) ≤ T , which contradicts with (2). We therefore have</p><formula xml:id="formula_16">max j∈M MC j (µ k j ) &gt; T<label>(3)</label></formula><p>We now inductively prove that for any k ′ ≥ k, we have µ µ µ k ′ is infeasible. Consider increasing k ′ starting from k, at the beginning we could have µ µ µ k ′ = µ µ µ k (which is infeasible), consider the first point k ′ ≥ k such that µ µ µ k ′ = µ µ µ k , we know that:</p><p>1. there exist at least one platform j ′ such that</p><formula xml:id="formula_17">µ k ′ j ′ = µ k j ′ + 1 2. MC j ′ (µ k ′ j ′ ) &gt; max j∈M MC j (µ k j ) &gt; T,</formula><p>where the first inequality is by definition of µ µ µ k ′ and the second inequality is due to (3). Now consider:</p><formula xml:id="formula_18">j∈M c j (µ k ′ j ) = j∈M c j (µ k j ) + c j ′ (µ k j ′ + 1) − c j ′ (µ k j ′ ) &gt; T • j∈M v j (µ k j ) + c j ′ (µ k j ′ + 1) − c j ′ (µ k j ′ ) &gt; T • j∈M v j (µ k j ) + MC j ′ (µ k j ′ + 1) • (v j ′ (µ k j ′ + 1) − v j ′ (µ k j ′ ) &gt; T • j∈M v j (µ k j ) + T • (v j ′ (µ k j ′ + 1) − v j ′ (µ k j ′ ) &gt; T • j∈M v j (µ k ′ j )</formula><p>Inductively apply this argument for each update of µ µ µ k ′ proves the statement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The fractional optimal bidding strategy</head><p>We present the optimal fractional solution, which at a high level is achieved by the following greedy process: starting with an initial budget of B, we allocate an infinitesimal amount to the platform currently offering the best value-to-unit-cost ratio (equivalently, the smallest marginal cost). We continue this process until either the budget is exhausted or the Return on Spend (ROS) constraint becomes tight. The bids corresponding to the final cost/value ratio on each platform form the optimal fractional strategy.</p><p>For ease reference, we formally define the feasible µ µ µ k with the largest k as the "almost-optimal" integral solution.</p><p>Definition 1 (Almost-Optimal Strategy). We say an bidding strategy µ µ µ is almost-optimal if µ µ µ = max k µ µ µ k is feasible .</p><p>Essentially, the almost-optimal integral strategy provides a close lower bound for the optimal fractional solution µ µ µ o . Specifically, let µ µ µ * represent the largest feasible µ µ µ k ; then, µ µ µ * = ⌊µ µ µ o ⌋. We present a subroutine that takes the almost-optimal integral solution µ µ µ * as input and returns the exact fractional optimal bidding strategy µ µ µ o by greedily selecting the smallest marginal costs (breaking ties lexicographically with respect to a fixed ordering of platforms) until the constraint is tight.</p><p>Consider the following equation:</p><formula xml:id="formula_19">j (x j • c j (µ * j ) + (1 − x j ) • c j (µ * j + 1)) = min   B, T •   j (x j • v j (µ * j ) + (1 − x j ) • v j (µ * j +1))    <label>(4)</label></formula><p>By definition of µ µ µ * , we have the x j ∈ [0, 1] for all platform j. In the case where there are multiple set of solutions, we break ties by maximizing the x j with lower platform index first.</p><p>Lemma 3 (Optimal Bidding Strategy). Let µ µ µ * be the almost-optimal integral solution. Then RoundUp (µ µ µ * ) is bidder's fractional optimal bidding strategy.</p><p>Proof. We prove optimality of µ µ µ ′ = RoundUp (µ µ µ * ) by contradiction. Assume there exist another solution µ µ µ a that is optimal with a value strictly higher than µ µ µ ′ . If µ µ µ a obtains a better value than µ µ µ ′ , there must be at least one platform j such that µ a j &gt; µ ′ j . Consequently, there must be some other platform i, such that µ a j &lt; µ ′ j , since the constraints are tight of solution µ µ µ ′ by definition of the RoundUp algorithm and µ µ µ a is feasible by assumption.</p><p>we first argue that MC j (µ a j ) &gt; MC i (µ ′ i ). To see this, first note that MC j (µ a j ) ≥ MC i (⌊µ ′ i ⌋), since otherwise by definition of µ µ µ k we have:</p><formula xml:id="formula_20">µ ′ j = arg max µ [MC j (µ) ≤ k] ≥ arg max µ [MC j (µ) ≤ MC i (⌊µ ′ i ⌋)] ≥ ⌈µ a j ⌉, SUBROUTINE 1: RoundUp Input: almost-optimal integral solution µ µ µ * 1 for j ∈ M do 2 µ ′ j ← µ * j + 1 3 µ o j ← µ * j 4</formula><p>query each µ ′ j to obtain v j (µ ′ j ), c j (µ ′ j ) and MC j (µ ′ j ) 5 re-index the platforms in non-decreasing order of MC j (µ</p><formula xml:id="formula_21">′ j ) s.t. if i ≤ j, MC i (µ ′ i ) ≤ MC j (µ ′ j ) 6 Solve for x j in (4) 7 µ o j ← µ o j + x j 8 return µ µ µ o</formula><p>where the last inequality is since MC(µ) = MC(⌈µ⌉) for any µ, this contradicting with the assumption that µ ′ j &lt; µ a j . By the greedy natural, with a similar contradiction argument we can show that MC j (µ a j ) &gt; MC i (µ ′ i ), we then have:</p><formula xml:id="formula_22">MC j (µ a j ) &gt; MC i (µ ′ i ) &gt; MC i (µ a i ),<label>(5)</label></formula><p>where the last inequality is due to the assumption that µ ′ i ≥ µ a i and the monotonicity of MC functions.</p><p>Platform i</p><formula xml:id="formula_23">µ a i µ ′ i Platform j µ ′ j µ a j µ a i &lt; µ ′ i µ ′ j &lt; µ a j</formula><p>Now we argue that µ µ µ a can be further improved by an exchange argument, contradicting with the assumption that µ µ µ a is optimal. Consider again the bidding strategy µ µ µ a , consider reduce µ a j by some ǫ amount, and increase on µ a i by the corresponding amount until the constraints are tight again, since MC j (µ a j ) ≥ MC i (µ a i ), the "bang per buck" for the exchange portion strictly increases, contradicting with the assumption that µ µ µ a is optimal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Median of the Medians Algorithm</head><p>In this section, with the help of the characterization in the previous section, we present an algorithm with a worst-case query complexity of O(m log(mn) log n). Note that if our feasible region were downward-closed, there would be a straightforward algorithm to solve the problem: We could perform a high-dimensional binary search in the bidding space, cutting down the whole strategy space by a constant fraction each time we query a particular strategy. This would lead to m • log(n m ) = m 2 log n queries (since querying one vector of strategies requires submitting a bidding strategy on each of the m platforms). Unfortunately, in the example below we show that our feasible region is not necessarily downward-closed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example 1. Consider a simple example with two platforms, 1 and 2, both having the following cost and value functions:</head><formula xml:id="formula_24">c 1 (µ) = µ v 1 (µ) = 8 3 µ; c 2 (µ) = µ v 2 (µ) = µ.</formula><p>Suppose the constraints are B = 10 and T = 1 2 . First, observe that µ 1 = 3 2 and µ 2 = 1 is a feasible solution since:</p><formula xml:id="formula_25">2 • 3 2 + 1 = 8 3 • 3 2 + 1.</formula><p>However, if we reduce µ 1 to 1, we get:</p><formula xml:id="formula_26">2 • (1 + 1) &gt; 8 3 + 1,</formula><p>indicating that the updated bidding strategy is no longer feasible. Therefore, the feasible region is not downward-closed.</p><p>Without a downward-closed feasible region, it is unclear which bidding strategy to try or how the search algorithm should proceed to minimize the number of attempts. To address this, we leverage the structure of integral bidding strategies shown in previous section and focus on identifying the k values corresponding to the maximum feasible µ µ µ k first. The potential k values are the set of marginal costs across all platforms (there are mn of them). We utilize the "median of medians" idea to ensure that we eliminate a constant fraction of marginal cost options with each round of probing.</p><p>First, given the characterization of the optimal solution, we provide two subroutines that are useful for our algorithm. We first provide a subroutine named MatchingMC, that given a k, finds the µ µ µ k vector via binary search on each platform. We show that the query complexity of this subroutine is O(m log n). Whenever we call the subroutine, we would make sure that the MC j (ℓ j ) ≤ k, i.e., there is at least one strategy in the search range that is feasible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SUBROUTINE 2: MatchingMC</head><p>Input: search range [ℓ j , r j ] of each j, the target MC k</p><formula xml:id="formula_27">1 for j ∈ M do 2 while µ k j = NULL do 3 µ j ← ℓ j +r j 2</formula><p>for all j ∈ M // Binary search on each platform</p><formula xml:id="formula_28">4 if MC j (µ j ) ≤ k then ℓ j ← µ j 5 if MC j (µ j ) &gt; k then r j ← µ j − 1 6 if r j ≤ ℓ j then µ k j ← ℓ j 7 return µ µ µ k = (µ k 1 , µ k 2 , . . . , µ k m )</formula><p>Lemma 4. Given some k ≥ 0, MatchingMC outputs the corresponding µ µ µ k with at most O(m log max j (r j − ℓ j )) queries.</p><p>Proof. The algorithm performs binary search on each platform to find the maximum µ such that MC j (µ) ≤ k, since binary search checks O(log(r j − ℓ j )) number of choice of µ on each platform and there are m platforms, the query complexity is O(m log max j (r j − ℓ j )). We now prove the correctness of the algorithm via case analysis, i.e., for each platform j, we have µ k j = max µ (MC j (µ) ≤ k). Fix any arbitrary platform j, if MC j (r j ) ≤ k, the algorithm will keep update ℓ j until eventually ℓ j = r j and correctly set µ k j = ℓ j = r j . On the other hand, if MC j (r j ) &gt; k, by the termination condition, we know that MC j (µ k j + 1) &gt; k, MC j (µ k j ) ≤ k, which corresponds to µ k j being the maximum bid with a marginal cost weakly less than k.</p><p>We now provide a subroutine that check if a given integral bidding profile µ µ µ is the almostoptimal solution (defined in Definition 1) or not. In addition, the subroutine can also check if a bidding profile is µ µ µ k for some k (defined in Lemma 1). The worst-case query complexity is O(m).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SUBROUTINE 3: OptCheck</head><p>Input: some bidding strategy µ µ µ 1 query each platform j strategy µ j , obtain v j (µ j ), c j (µ j ) and MC j (µ j )</p><formula xml:id="formula_29">2 if µ µ µ is infeasible then return INFEASIBLE 3  ← arg max j [MC j (µ j )] 4 k ← MC (µ ) 5 for j ∈ M do 6 µ ′ j ← µ j + 1</formula><p>// Check the next MC value for platform j 7 query µ ′ j on platform j obtain v j (µ ′ j ), c j (µ ′ j ) and MC j (µ ′ j )</p><formula xml:id="formula_30">8 if MC j (µ ′ j ) ≤ k for any j =  then 9 return NOT-µ µ µ k // µ µ µ is not µ µ µ k for some k 10 j * ← arg min j (MC j (µ ′ j ))</formula><p>// find the minimum among the next points Proof. Since OptCheck queries at most 2 strategies from each platform, the worst-case number of queries used is 2m = O(m). We now prove the correctness of the subroutine for each different case. The INFEASIBLE case is trivial. For the NOT-µ µ µ k case, as indicated by line 8, since there exists a platform where MC j (µ j + 1) ≤ k, we know that the given bidding profile µ µ µ is not µ µ µ k for some k by definition. On the other hand, if OptCheck does not terminate in line 9, it means µ µ µ is feasible and µ µ µ = µ µ µ k for some k. To check if the given profile is almost-optimal (the floor of µ µ µ o ), by Lemma 3, we just need to verify whether increasing k would make µ µ µ k infeasible. If the next immediate change would cause µ µ µ to be infeasible, then µ µ µ is ALMOST-OPTIMAL; otherwise, it is NOT-OPTIMAL.</p><formula xml:id="formula_31">11 µ j * ← µ ′ j * 12 if µ µ µ is infeasible // the</formula><p>We are now ready to present our algorithm, MedianOfMedians. This algorithm finds the almost-optimal integral solution by searching within the marginal cost space and then converts this almost-optimal integral solution to the optimal fractional solution using the RoundUp procedure. The search process is inspired by the median-of-medians algorithm. In each iteration, we first identify the median marginal cost for each platform, and then select the median that most evenly splits the space, i.e., ensuring that the number of marginals weakly smaller than this median is equal to the number of marginals weakly larger than it.</p><p>Next, we use MatchingMC to determine the corresponding bidding profile µ µ µ k with the medianof-the-medians marginal as the k-value, and apply OptCheck to evaluate the quality of the bidding profile µ µ µ k . Based on the result from OptCheck(µ µ µ k ), we can eliminate a constant fraction of the remaining candidates for the optimal marginal costs. This process is repeated iteratively until we find an almost-optimal solution. Finally, we apply the RoundUp procedure to obtain the fractional optimal solution. For a formal description, please refer to Algorithm 1. In the rest of the section, we prove the correctness and query complexity of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>increasing median marginal cost</head><p>Theorem 1. Given any instance I, the MedianOfMedians algorithm finds the fractional optimal bidding strategy with at most O(m log mn log n) queries.</p><p>Proof. We first prove the correctness of the algorithm. By Lemma 3 we know that the almostoptimal integral bidding strategy correspond to µ µ µ k * where k * is the maximum k such that µ µ µ k is feasible. We prove the correctness of the algorithm by first showing that during the execution of the algorithm, there always exist some µ ∈ [ℓ j , r j ], of which the µ µ µ MC j (µ) = µ µ µ k * . In other words, the algorithm can not eliminate the critical marginal cost MC j (µ) that corresponds to µ µ µ k * . Consider the possible updates of ℓ j and r j for each platform j, i.e., Line 9 and Line 11. First consider any iteration such that OptCheck(µ µ µ * ) = INFEASIBLE, and for all platforms j ≥ j * w.r.t to the ranking defined in Line 5, we have MC j (µ j ) ≥ MC j * (µ j * ). By monotonicity, for any µ ≥ µ j on platform j we have:</p><formula xml:id="formula_32">MC j (µ) ≥ MC j (µ j ) ≥ MC j * (µ j * ),</formula><p>By Lemma 1, since OptCheck(µ µ µ * ) = INFEASIBLE, we would also have µ µ µ MC j (µ) is infeasible for µ ≥ µ j for platforms j ≥ j * . Therefore, Line 9 does not remove any µ of which µ µ µ MC j (µ) = µ µ µ k * . Next consider any iteration such that OptCheck(µ µ µ * ) = NOT-OPTIMAL, and for all platforms j ≤ j * w.r.t to the ranking defined in Line 5, we have MC j (µ j ) ≤ MC j * (µ j * ). Again by monotonicity, for any µ ≤ µ j on platform j we have:</p><formula xml:id="formula_33">MC j (µ) ≤ MC j (µ j ) ≤ MC j * (µ j * ),</formula><p>By Lemma 1, since OptCheck(µ µ µ * ) = NOT-OPTIMAL, we have µ µ µ MC j (µ) is also feasible and not optimal for µ ≤ µ j for platforms j ≤ j * . Therefore Line 11 does not remove any µ of which µ µ µ MC j (µ) = µ µ µ k * as well. In addition, it is easy to see that µ µ µ MC j (µ) = µ µ µ k * for some platform j and some strategy µ. (let MC j (µ) = arg max(MC j (µ k * j ))). And since the set of bids is finite and getting strictly smaller in each round, the algorithm will eventually terminate with the almost-optimal integral bidding solution µ µ µ k * , after which applying RoundUp would give us the fractional optimal solution.</p><p>We now prove the query complexity of the algorithm. In particular, we argue that the while loop would iterate no more then O(log(mn)) times. Together with the O(m log n) query complexity of MatchingMC this would show that the query complexity of the algorithm is O(m log(mn) log n). First note that there are in total m • n possible marginal costs (MC j (µ) for all j and µ). By definition of j * , and µ j for each platform j, we have that min(|{MC i (µ) : i ≤ j * and µ ≤ µ i }|, |{MC i (µ) : i ≥ j * and µ ≥ µ i }|) ≥ j (r j −ℓ j ) 4 − min j (r j − ℓ j ) = O( j (r j − ℓ j )). Since we remove a constant fraction of choices in each round, the number of queries is no more then O(log mn). Lastly note that RoundUp makes at most m queries, making the total queries needed for MedianOfMedians O(m log(mn) log n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Lower Bounds on Query Complexity</head><p>In this section, we provide some lower bounds on query complexity. We show that any algorithm needs to have a query complexity of Ω(m log n) even if it knows the optimal marginal cost k. We also provide a lower bound of Ω(log mn) for finding the optimal marginal cost k even when the algorithm is given a single-query black-box oracle for MatchingMC. Note that our algorithm MedianOfMedians finds the optimal solution essentially by searching for the optimal marginal cost using O(log mn) calls to MatchingMC which itself costs (m log n) queries, and the query complexity upper bound is in fact the product of the two aforementioned lower bounds. This suggests that improving the query complexity upper bound further would require an algorithm that does not treat MatchingMC as a black-box.</p><p>Theorem 2. Any algorithm needs Ω(m log n) queries to find the optimal bidding strategy, even if it knows the value k for which µ µ µ k is the almost-optimal integral bidding strategy.</p><p>Proof. Given any algorithm, assume it knows the correct value of k. On each platform, finding the maximum µ (therefore the ⌈µ o j ⌉) such that MC j (µ) ≤ k takes at least Ω(log n) queries. We prove this via a decision tree argument similar to the Ω(log n) query complexity for the binary search problem.</p><p>Fix an arbitrary platform j; we want to determine the maximum index µ such that MC j (µ) ≤ k. We represent any algorithm as a decision tree as follows:</p><p>(1). Each query made to the platform is represented as a node in the decision tree, and each node has three children: one for MC j (µ) ≤ k, one for MC j (µ) &gt; k, and a third for cases not specified. <ref type="bibr" target="#b1">(2)</ref>. The leaves of this tree represent the possible outcomes of the search: specifically, finding the maximum index µ such that MC j (µ) ≤ k.</p><p>There are n + 1 distinct outcomes, corresponding to the maximum value of µ being 0, 1, ..., or n. In any decision tree with x leaves, the minimum height h is log x.</p><p>Moreover, the height h of the decision tree corresponds to the number of queries made. Therefore, the minimum height of the decision tree is log(n + 1), implying that the number of queries needed to resolve the search will be at least Ω(log(n + 1)) = Ω(log n).</p><p>Lastly, since all platforms operate independently, the search on each platform requires Ω(log n) queries. Consequently, to complete the search across all platforms will require Ω(m log n) queries.</p><p>Theorem 3. Any algorithm needs Ω(log(mn)) queries to find the optimal bidding strategy, even if it has access to a black-box oracle of MatchingMC that uses a single query.</p><p>Proof. There are a total of mn distinct marginal costs, and our objective is to determine the marginal cost MC j (µ) for a specified j and µ such that µ µ µ MC j (µ) represents the almost-optimal integral solution. We establish this by reducing the binary search problem to our problem.</p><p>Consider a binary search scenario involving a single sorted array A with |A| = h and a target number a for which we are searching. Let i denote the index of a within this array. We can construct an instance of our problem featuring a global ordering of marginal costs. In this global ordering, the marginal costs MC j (µ) located at index i correspond to the bidding strategy µ µ µ MC j (µ) , which serves as the almost-optimal integral solution. If we are able to identify the index of the optimal marginal cost in fewer than Ω(log mn) queries, it would consequently allow us to resolve the binary search problem in fewer than Ω(log h) queries. This outcome would contradict the established complexity bounds associated with binary search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Learning-Augmented Algorithms</head><p>In this section we aim to design searching algorithm that utilize a (possibility erroneous) prediction μ µ µ regarding the actual optimal fractional strategy µ µ µ o . The error of the prediction is measured by its distance to the optimal solution in the ℓ-infinity norm, i.e.</p><formula xml:id="formula_34">η = max j |μ j − µ o j |.<label>(6)</label></formula><p>We show the following algorithm, modified from MedianOfMedians, achieves a query complexity of O(m log mη log η), note that since η ≤ n, this guarantee matches the query complexity of MedianOfMedians even if the prediction is arbitrarily wrong. The algorithm begins by checking whether the floor of the predicted bidding strategy, ⌊μ j ⌋, for all j, is ALMOST-OPTIMAL using OptCheck. If it is, the algorithm applies RoundUp and returns the optimal solution. If not, the algorithm assumes the error is small and attempts to search for the optimal solution within a restricted range around the predicted strategy μj on each platform, following a similar approach to the MedianOfMedians algorithm.</p><p>If the optimal solution is still not found, the search range is expanded, and the search is repeated. This process continues until a almost-optimal solution is identified. By progressively expanding the search range as the square of the previous range, we show that the query complexity is at most O(m log(mη) log η). Please refer to Algorithm 2 for a formal description. ALGORITHM 2: BranchOutMedianOfMedians 1 Initialize: ℓ j ← μj , r j ← μj for all j ∈ M 2 μ µ µ ← ⌊μ µ µ⌋ for all j ∈ M 10 query each platform j strategy µ j , obtain v j (µ j ), c j (µ j ) and MC j (µ j )</p><p>11 rank the platforms in non-decreasing order of µ j s.</p><formula xml:id="formula_35">t. if i ≤ j, µ i ≤ µ j 12 j * ← min j (| i≤j (r i − ℓ i ) − i≥j (r i − ℓ i )|)</formula><p>// find the j * that equally split the search space Theorem 4. Given any instance I, and predicted optimal bidding strategy μ µ µ such that the error of the μ µ µ is η, the BranchOutMedianOfMedians algorithm finds the optimal bidding strategy with at most O(m log mη log η) queries.</p><formula xml:id="formula_36">13 k ← MC j * (µ j * ) 14 if there exist a MC j (μ j − 2 2 i ) &gt; k then 15 ℓ j ← µ j + 1 for j ≤ j * // k is too small 16 else 17 µ µ µ k ← MatchingMC([μ j − 2 2 i , μj + 2 2 i ] ∀j, k) 18 if OptCheck(µ µ µ k )) == NOT-µ µ µ k then 19 r j ← µ j − 1 for all j ≥ j * // k</formula><p>Proof. We first argue the correctness of the algorithm. Let η denote the error of the prediction as defined in <ref type="bibr" target="#b5">(6)</ref>, and let i * be the smallest i such that 2 2 i ≥ (η + 1). We will show that the algorithm does not terminate in any round i &lt; i * . Let µ µ µ * represent the almost-optimal integral bidding strategy. When i &lt; i * , there exists at least one platform j such that µ * j / ∈ [ℓ j , r j ] at the beginning of the i * -th iteration of the outer while loop. By the correctness of OptCheck and since the algorithm only searches within the range [ℓ j , r j ], it cannot return a solution in earlier rounds.</p><p>Next, we argue that the algorithm will terminate in round i * with the optimal solution. Since 2 2 i * ≥ (η + 1), we know that µ * j ∈ [ℓ j , r j ] for all j at the start of the i * -th iteration of the outer while loop. Now, consider the search process during this round. As in the proof of Theorem 1, we show correctness by proving that during the execution of the i * -th iteration, there always exists some µ ∈ [ℓ j , r j ] such that µ MC j (µ) = µ µ µ * . Considering all possible updates to ℓ j and r j for each platform, we will now show that none of these updates eliminate any such µ values. First, in Line 15, the algorithm encounters a platform j where MC j (μ j − 2 2 i * ) &gt; k, meaning the current candidate marginal cost k is smaller than the marginal cost of the smallest strategy within the current search range for that platform. Since µ * j ∈ [μ j − 2 2 i * , μj + 2 2 i * ] for all platforms and µ µ µ * = µ µ µ k for some k, this implies that the current marginal cost candidate k, as well as all marginal costs weakly smaller than k, cannot correspond to the optimal marginal cost µ µ µ * . These marginal costs (and their corresponding strategies) are thus eliminated from the search range.</p><p>In Line 19, the algorithm is in the case where OptCheck(µ µ µ k ) == NOT − µ µ µ k , indicating that µ µ µ k is not optimal. This implies that there exists a platform j such that: 1. µ k j = μj + 2 2 i * , i.e., the largest strategy, and 2. for the same platform j, MC j (μ j + 2 2 i * + 1) ≤ k. This means that k, along with all marginal costs weakly greater than k, exceeds the optimal marginal cost corresponding to µ µ µ * . These marginal costs (and their corresponding strategies) are therefore eliminated from the search range.</p><p>The remaining cases are handled in the same way as discussed in Theorem 1. In Line 21, when µ µ µ k is infeasible, we eliminate all marginal costs weakly greater than the current one being tested. In Line 25, when µ µ µ k is not optimal, we eliminate all marginal costs weakly smaller than the current one. Finally, in Line 23, once we find µ µ µ * , we use RoundUp to obtain the optimal fractional strategy.</p><p>We now prove the query complexity of the algorithm. Let i * be the value of i when the algorithm terminates. First, we have i * ≤ η 2 , where η is the error of the prediction as defined in <ref type="bibr" target="#b5">(6)</ref>. By Lemma 4, we know that the MatchingMC operation in iteration i takes m log 2 2 i time. Additionally, by Theorem 1, the while loop within this iteration will run log(m2 2 i ) times. Since all other subroutines take O(m) queries, and the size of the search range is squared at each step, the algorithm terminates when the search space is weakly larger than n. As a corollary, we also achieved "best-of-both-worlds" results in terms of consistency and robustness. Specifically, if the provided prediction is correct (or even "almost correct," i.e., ⌊μ µ µ⌋ = ⌊µ µ µ o ⌋), only 2m queries are required (note that even checking that a bidding profile is feasible requires m queries). Since η ≤ n by definition, the total number of queries will never exceed O(m log(mn) log n), which matches the query complexity of MedianOfMedians: Corollary 1. The BranchOutMedianOfMedians algorithm is 2m-consistent and O(m log mn log n) robust, where the robustness matches the query complexity of MedianOfMedians.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this work, we addressed the challenge of finding the optimal bidding strategy for advertisers operating in a multi-platform auction environment with low query complexity. Our approach models competition within each platform through value and cost functions that map various bidding strategies to their respective outcomes. We introduced an efficient algorithm that achieves this goal with a query complexity of O(m log(mn) log n), where m represents the number of platforms and n denotes the number of potential bidding strategies available on each platform.</p><p>To further enhance efficiency, we incorporated the learning-augmented framework, proposing an algorithm that leverages a potentially flawed prediction of the optimal bidding strategy. Our results provide a query complexity bound that degrades gracefully, achieving O(m) queries when accurate predictions are available and O(m log(mn) log n) even with completely incorrect predictions. This flexibility exemplifies a "best-of-both-world" scenario, providing advertisers with different options to effectively navigate the complexities of multi-platform bidding with minimal queries.</p><p>We believe that autobidding in multi-platform auction settings is understudied, and many intriguing questions remain unanswered. One immediate question for exploration is closing the gap between the upper and lower bounds established in our work, which would necessitate different tools and ideas. Additionally, it would be interesting to analyze the dynamics of the market if all the bidders adopted the approach presented in this study in determining their bidding strategies.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>5 .</head><label>5</label><figDesc>updated µ µ µ is not feasible 13 then return ALMOST-OPTIMAL 14 else return NOT-OPTIMAL Lemma Given a bidding profile µ µ µ, the subroutine OptCheck determines if the given µ µ µ is INFEASIBLE, NOT µ µ µ k , NOT-OPTIMAL or ALMOST-OPTIMAL with at most O(m) queries.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 : 3 µ j ← ℓ j +r j 2 for all j ∈ M 4 query 6 j 7 µ 8 if 13 return</head><label>132467813</label><figDesc>Figure 1: Illustration of one round of MedianOfMedians. Each column represents the current search region of a platform. The vertical arrow indicates the increasing direction of µ in each platform. The platforms are ranked by the median marginals as described in the algorithm. The grey point represents the queried k value. If µ µ µ k is infeasible, all strategies in the shaded round rectangle are removed; otherwise, all strategies in the non-shaded one are removed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>log log i * i=0 m</head><label>i=0</label><figDesc>log(m • 2 2 i ) • log 2 2 i = log log i * i=0 m(log m + 2 i )2 i =m(log m + 2 log log i * +1 ) • 2 log log i * +1 =m(log m + 2 log i * ) • 2 log i * ≤m(log m + 2 log(η) 2 ) • 2 log(η) 2 =m(log m + 4 log(η)) • 2 log(η)=O(m log(mη) log η)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>← μj − 2 2 i , r j ← μj + 2 2 i for all j ∈ M</figDesc><table><row><cell cols="4">3 if OptCheck(μ µ µ) == ALMOST-OPTIMAL then return RoundUp(μ µ µ)</cell></row><row><cell cols="2">4 i ← 0</cell><cell></cell><cell>// initialize the counter for doubling process</cell></row><row><cell cols="3">5 while TRUE do</cell></row><row><cell>7</cell><cell cols="2">range-indicator ← TRUE</cell><cell>// assume range is correct</cell></row><row><cell>8</cell><cell cols="2">while range-indicator == TRUE do</cell></row><row><cell>9</cell><cell>µ j ←</cell><cell>ℓ j +r j 2</cell></row></table><note>6ℓ j</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">It can be viewed as bidding randomly between two adjacent bids.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1">It is not hard to see that we can encode any knapsack problem as an instance of our problem with a budget constraint.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2">When marginal cost is not part of the query output, it is still achievable by querying both the current and the previous bid, which increases the query complexity by a constant factor.</note>
		</body>
		<back>

			<div type="funding">
<div xmlns="http://www.tei-c.org/ns/1.0"> *   <p>This work was done while the author was visiting Google as a student researcher.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Autobidding with constraints</title>
		<author>
			<persName><forename type="first">G</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Badanidiyuru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-030-35389-6_2</idno>
		<ptr target="https://doi.org/10.1007/978-3-030-35389-6_2" />
	</analytic>
	<monogr>
		<title level="m">Web and Internet Economics -15th International Conference</title>
		<title level="s">Lecture Notes in Computer Science</title>
		<editor>
			<persName><forename type="first">I</forename><surname>Caragiannis</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">V</forename><forename type="middle">S</forename><surname>Mirrokni</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">E</forename><surname>Nikolova</surname></persName>
		</editor>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019-12-10">2019. December 10-12, 2019. 2019</date>
			<biblScope unit="volume">11920</biblScope>
			<biblScope unit="page" from="17" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multi-channel auction design in the autobidding world</title>
		<author>
			<persName><forename type="first">G</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perlroth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhao</surname></persName>
		</author>
		<idno type="DOI">10.1145/3580507.3597707</idno>
		<ptr target="https://doi.org/10.1145/3580507.3597707" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th ACM Conference on Economics and Computation, EC &apos;23</title>
				<meeting>the 24th ACM Conference on Economics and Computation, EC &apos;23<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2023">2023</date>
			<biblScope unit="volume">21</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Auto-bidding and auctions in online advertising: A survey</title>
		<author>
			<persName><forename type="first">G</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Badanidiyuru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">R</forename><surname>Balseiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Bhawalkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liaw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mahdian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Leme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perlroth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Piliouras</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schvartzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sivan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Spendlove</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Teng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zuo</surname></persName>
		</author>
		<idno type="DOI">10.1145/3699824.3699838</idno>
		<ptr target="https://doi.org/10.1145/3699824.3699838" />
	</analytic>
	<monogr>
		<title level="j">SIGecom Exch</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="159" to="183" />
			<date type="published" when="2024-10">Oct. 2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName><forename type="first">G</forename><surname>Aggarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Perlroth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schvartzman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2405.02699</idno>
		<title level="m">Platform competition in the autobidding world</title>
				<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Learning-augmented mechanism design: Leveraging predictions for facility location</title>
		<author>
			<persName><forename type="first">P</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Balkanski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EC &apos;22: The 23rd ACM Conference on Economics and Computation</title>
				<meeting><address><addrLine>Boulder, CO, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2022">July 11 -15, 2022. 2022</date>
			<biblScope unit="page" from="497" to="528" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Secretary and online matching problems with machine learned advice</title>
		<author>
			<persName><forename type="first">A</forename><surname>Antoniadis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Gouleakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kleer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kolev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discret. Optim</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">100778</biblScope>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Online graph algorithms with predictions</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Azar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Panigrahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Touitou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirty-Third Annual ACM-SIAM Symposium on Discrete Algorithms</title>
				<meeting>the Thirty-Third Annual ACM-SIAM Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Bicriteria multidimensional mechanism design with side information</title>
		<author>
			<persName><forename type="first">M.-F</forename><surname>Balcan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Prasad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Sandholm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 37th International Conference on Neural Information Processing Systems, NIPS &apos;23</title>
				<meeting>the 37th International Conference on Neural Information Processing Systems, NIPS &apos;23<address><addrLine>Red Hook, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Curran Associates Inc</publisher>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Mechanism design with predictions: An annotated reading list</title>
		<author>
			<persName><forename type="first">E</forename><surname>Balkanksi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGecom Exchanges</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="54" to="57" />
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Strategyproof scheduling with predictions</title>
		<author>
			<persName><forename type="first">E</forename><surname>Balkanski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
		<idno type="DOI">10.4230/LIPIcs.ITCS.2023.11</idno>
		<ptr target="https://doi.org/10.4230/LIPIcs.ITCS.2023.11" />
	</analytic>
	<monogr>
		<title level="m">14th Innovations in Theoretical Computer Science Conference, ITCS 2023</title>
		<title level="s">22. Schloss Dagstuhl -Leibniz-Zentrum für Informatik</title>
		<editor>
			<persName><forename type="first">Y</forename><forename type="middle">T</forename><surname>Kalai</surname></persName>
		</editor>
		<meeting><address><addrLine>MIT, Cambridge, Massachusetts, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2023">January 10-13, 2023</date>
			<biblScope unit="volume">251</biblScope>
			<biblScope unit="page">2023</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Online mechanism design with predictions</title>
		<author>
			<persName><forename type="first">E</forename><surname>Balkanski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Zhu</surname></persName>
		</author>
		<idno type="DOI">10.48550/arXiv.2310.02879</idno>
		<idno>CoRR, abs/2310.02879</idno>
		<ptr target="https://doi.org/10.48550/arXiv.2310.02879" />
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The primal-dual method for learning augmented algorithms</title>
		<author>
			<persName><forename type="first">É</forename><surname>Bamas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Maggiori</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Svensson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems 33: Annual Conference on Neural Information Processing Systems</title>
				<meeting><address><addrLine>NeurIPS</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2020-12-06">2020. 2020. December 6-12, 2020, virtual, 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Online nash social welfare maximization with predictions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Banerjee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gorokh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2022 ACM-SIAM Symposium on Discrete Algorithms, SODA 2022. SIAM</title>
				<meeting>the 2022 ACM-SIAM Symposium on Discrete Algorithms, SODA 2022. SIAM</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">MAC advice for facility location mechanism design</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Barak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gupta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Talgam-Cohen</surname></persName>
		</author>
		<idno type="DOI">10.48550/arXiv.2403.12181</idno>
		<ptr target="https://doi.org/10.48550/arXiv.2403.12181" />
		<imprint>
			<biblScope unit="page">2024</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Optimal metric distortion with predictions</title>
		<author>
			<persName><forename type="first">B</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
		<idno>CoRR, abs/2307.07495</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Randomized learning-augmented auctions with revenue guarantees</title>
		<author>
			<persName><forename type="first">I</forename><surname>Caragiannis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kalantzis</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2401.13384</idno>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Mechanism design augmented with output advice</title>
		<author>
			<persName><forename type="first">G</forename><surname>Christodoulou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sgouritsa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Vlachos</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2406.14165</idno>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">To trust or not to trust: Assignment mechanisms with predictions in the private graph model</title>
		<author>
			<persName><forename type="first">R</forename><surname>Colini-Baldeschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Klumper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Schäfer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Tsikiridis</surname></persName>
		</author>
		<idno>CoRR, abs/2403.03725</idno>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Towards efficient auctions in an auto-bidding world</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zuo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Web Conference 2021</title>
				<meeting>the Web Conference 2021</meeting>
		<imprint>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="3965" to="3973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Multi-channel autobidding with budget and roi constraints</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Golrezaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Jaillet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C N</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Mirrokni</surname></persName>
		</author>
		<idno>ICML&apos;23. JMLR.org</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 40th International Conference on Machine Learning</title>
				<meeting>the 40th International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Secretaries with advice</title>
		<author>
			<persName><forename type="first">P</forename><surname>Dütting</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Lattanzi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">P</forename><surname>Leme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vassilvitskii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EC &apos;21: The 22nd ACM Conference on Economics and Computation</title>
				<editor>
			<persName><forename type="first">P</forename><surname>Biró</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">S</forename><surname>Chawla</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">F</forename><surname>Echenique</surname></persName>
		</editor>
		<meeting><address><addrLine>Budapest, Hungary</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2021">July 18-23, 2021. 2021</date>
			<biblScope unit="page" from="409" to="429" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">The secretary problem with predictions</title>
		<author>
			<persName><forename type="first">K</forename><surname>Fujii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yoshida</surname></persName>
		</author>
		<idno>CoRR, abs/2306.08340</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Improved price of anarchy via predictions</title>
		<author>
			<persName><forename type="first">V</forename><surname>Gkatzelis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kollias</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Sgouritsa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd ACM Conference on Economics and Computation</title>
				<meeting>the 23rd ACM Conference on Economics and Computation</meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="529" to="557" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Online knapsack with frequency predictions</title>
		<author>
			<persName><forename type="first">S</forename><surname>Im</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Qaem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Purohit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems 34: Annual Conference on Neural Information Processing Systems 2021, NeurIPS 2021</title>
				<imprint>
			<date type="published" when="2021">December 6-14, 2021. 2021</date>
			<biblScope unit="page" from="2733" to="2743" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Mechanism design with predictions for obnoxious facility location</title>
		<author>
			<persName><forename type="first">G</forename><surname>Istrate</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bonchis</surname></persName>
		</author>
		<idno>CoRR, abs/2212.09521</idno>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Equilibria in multiagent online problems with predictions</title>
		<author>
			<persName><forename type="first">G</forename><surname>Istrate</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bonchis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bogdan</surname></persName>
		</author>
		<idno>CoRR, abs/2405.11873</idno>
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">A</forename><surname>Lindermayr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Megow</surname></persName>
		</author>
		<author>
			<persName><surname>Alps</surname></persName>
		</author>
		<ptr target="https://algorithms-with-predictions.github.io/" />
		<imprint>
			<date type="published" when="2024">2024</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Competitive auctions with imperfect predictions</title>
		<author>
			<persName><forename type="first">P</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<idno>CoRR, abs/2309.15414</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Competitive caching with machine learned advice</title>
		<author>
			<persName><forename type="first">T</forename><surname>Lykouris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vassilvtskii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Machine Learning</title>
				<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="3296" to="3305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Revenue optimization with approximate bid predictions</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Medina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vassilvitskii</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<author>
			<persName><forename type="first">In</forename><forename type="middle">I</forename><surname>Guyon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Luxburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">M</forename><surname>Wallach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Fergus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">V N</forename><surname>Vishwanathan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Garnett</surname></persName>
		</author>
		<ptr target="https://proceedings.neurips.cc/paper/2017/hash/884d79963bd8bc0ae9b13a1aa71add73-Abstract.ht" />
		<title level="m">Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems 2017</title>
				<meeting><address><addrLine>Long Beach, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">December 4-9, 2017. 2017</date>
			<biblScope unit="page" from="1858" to="1866" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Algorithms with predictions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mitzenmacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Vassilvitskii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="33" to="35" />
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Why do competitive markets converge to first-price auctions?</title>
		<author>
			<persName><forename type="first">R</forename><surname>Paes Leme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sivan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Teng</surname></persName>
		</author>
		<idno type="DOI">10.1145/3366423.3380142</idno>
		<ptr target="https://doi.org/10.1145/3366423.3380142" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of The Web Conference 2020, WWW &apos;20</title>
				<meeting>The Web Conference 2020, WWW &apos;20<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="596" to="605" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Improving online algorithms via ML predictions</title>
		<author>
			<persName><forename type="first">M</forename><surname>Purohit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Svitkina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Neural Information Processing Systems 31: Annual Conference on Neural Information Processing Systems</title>
				<meeting><address><addrLine>NeurIPS; Montréal, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2018-12-03">2018. 2018. December 3-8, 2018. 2018</date>
			<biblScope unit="page" from="9684" to="9693" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<author>
			<persName><forename type="first">F</forename><surname>Susan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Golrezaei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Schrijvers</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2306.07352</idno>
		<title level="m">Multi-platform budget management in ad markets with non-ic auctions</title>
				<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Mechanism design with predictions</title>
		<author>
			<persName><forename type="first">C</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lu</surname></persName>
		</author>
		<ptr target="http://arxiv.org/ps/2502.19317v1" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirty-First International Joint Conference on Artificial Intelligence, IJCAI 2022</title>
				<editor>
			<persName><forename type="first">L</forename><forename type="middle">D</forename><surname>Raedt</surname></persName>
		</editor>
		<meeting>the Thirty-First International Joint Conference on Artificial Intelligence, IJCAI 2022<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2022-07">July 2022</date>
			<biblScope unit="page">2022</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
